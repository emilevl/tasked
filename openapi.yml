openapi: 3.0.3
info:
  title: Tasked - OpenAPI 3.0
  description: |-
    Tasked est une application de timbrage. L'application permet de créer des projets, puis de créer des tâches en "timbrant". 
    L'idée est de l'utiliser au sein d'une entreprise afin que l'employé ait simplement à passer son téléphone sur un lecteur NFC pour envoyer une requête de "début de tâche". Idem pour la fin de la journée
    
    Quelques liens utiles:
    - [Cours ArchiOWeb](https://github.com/MediaComem/comem-archioweb)
    - [Projet github "tasked"](https://github.com/emilevl/tasked)
    - [API Specification](https://swagger.io/specification/)
  termsOfService: http://swagger.io/terms/
  # TODO: Voir ce qu'il y a à garder
  contact:
    email: emile.vianney-liaud@heig-vd.ch
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
  # TODO: Compléter nom du serveur
servers:
  - url: https://tasked.onrender.com/api/
tags:
  - name: projects
    description: Every information about the projects
  - name: users
    description: Information about the users
  - name: tasks
    description: Operation of tasks and how to access them
paths:
  /projects/{projectId}:
    get:
      description: With the id as a param, it will retrieve the specific project
      tags:
        - projects
      summary: Retrieve a specific project
      parameters:
        - name: projectId
          in: path
          required: true
          description: Id of the project to retrieve
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: Unauthorized
        '404':
          description: Id Not found
      security:
        - user_auth:
            - write:admin
            - read:user
  /users:
    get:
      tags:
        - users
      summary: List of users
      description: Get the list of all the users, sorted by firstName ascending
      operationId: getUsers
      requestBody:
        description: Get all the users information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: Id Not found
      security:
        - user_auth:
            - write:admin
            - read:user
  /tasks:
    get:
      tags:
        - tasks
      summary: List of tasks
      description: Get the list of all the tasks, sorted by name ascending
      operationId: getTasks
      requestBody:
        description: Get all the tasks information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
        '404':
          description: Id Not found
      security:
        - user_auth:
            - write:admin
            - read:user

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: 63442662c073e
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        username:
          type: string
          example: johndoe
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
            description: All the tasks belonging the user
        projects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
            description: All the projects belonging the user
    Project:
      type: object
      properties:
        _id:
          type: integer
          format: int64
          example: 5604f32
        name:
          type: string
          example: My new app
        active:
          type: boolean
        description:
          type: string
        company:
          type: string
        author:
          type: array
          items:
            $ref: "#/components/schemas/User"
            description: Author of the project (user)
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
            description: All the tasks belonging the project
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5604f32
        name:
          type: string
          example: My task created
        description:
          type: string
        startDate:
          type: string
          format: date-time
          example: "2022-10-19T13:20:11.686Z"
        endDate:
          format: date-time
          example: "2022-10-19T14:30:11.686Z"
        user:
          type: array
          items:
            $ref: "#/components/schemas/User"
            description: User who created the task
        project:
          type: array
          items:
            $ref: "#/components/schemas/Project"
            description: The project of the task
  securitySchemes:
    user_auth:
      type: http
      description: L'utilisateur doit se connecter pour effectuer des tâches
      scheme: bearer
      bearerFormat: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzRmZDlmZWUyOGMxZDExYzMzMTlmY2UiLCJzY29wZSI6InVzZXIiLCJpYXQiOjE2NjYxODYxMzAsImV4cCI6MTY2Njc5MDkzMH0.06h-L09jS0_rNfQXwCIIcYWBo7zwtSIGz24X0Xmue6A"
    api_key:
      type: apiKey
      name: api_key
      in: header